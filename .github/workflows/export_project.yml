name: Export ConceptGraph builds

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number, used for the release name'
        default: ''
        required: true

defaults:
  run:
    shell: bash


jobs:

  compile_osx_libs:
    name: Compile OSX libraries
    runs-on: macos-latest

    steps:

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'

      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          python --version
          scons --version

      - name: Clone the ConceptGraph repository
        uses: actions/checkout@v2
        with:
          repository: HungryProton/concept_graph
          path: concept_graph
          ref: master
          submodules: recursive

      - name: Compile GDnative libraries
        run: |
          cd concept_graph/src/native/
          ./compile_all.sh osx

      - name: Zip the repository with compiled dylibs
        run: |
          zip -r concept_graph.zip concept_graph

      - name: Save the repository
        uses: actions/upload-artifact@master
        with:
          name: concept_graph
          path: concept_graph.zip

  export:
    name: Export the project
    runs-on: ubuntu-18.04
    needs: [compile_osx_libs]

    steps:
        # Azure repositories are not reliable, we need to prevent azure giving us packages.
      - name: Make apt sources.list use the default Ubuntu repositories
        run: |
          curl https://raw.githubusercontent.com/godotengine/godot/master/misc/ci/sources.list > sources.list
          sudo cp -f sources.list /etc/apt/sources.list
          sudo apt-get update

      - name: Install dependencies
        run: |
          sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev yasm mingw-w64

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'

      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          python --version
          scons --version

      - name: Retrieve the repository from the previous job
        uses: actions/download-artifact@master
        with:
          name: concept_graph
          path: ./

      - name: Unzip the artifact
        run: |
          ls -al
          unzip concept_graph.zip

      - name: Clone the editor binaries
        uses: actions/checkout@v2
        with:
          repository: HungryProton/concept_graph_environment
          path: builds

      - name: Compile GDnative libraries
        run: |
          cd concept_graph/src/native/
          ./compile_all.sh linux
          ./compile_all.sh windows

      - name: Export Linux build
        run: |
          mkdir -p x11/ConceptGraph-${{ github.event.inputs.version }}
          builds/server/godot_server.x11.opt.tools.64 --path concept_graph --export "linux" "../x11/ConceptGraph-${{ github.event.inputs.version }}/ConceptGraph"
          zip -r ConceptGraph-${{ github.event.inputs.version }}-linux.zip x11/ConceptGraph-${{ github.event.inputs.version }}

      - name: Export Windows build
        run: |
          mkdir -p win/ConceptGraph-${{ github.event.inputs.version }}
          builds/server/godot_server.x11.opt.tools.64 --path concept_graph --export "windows" "../win/ConceptGraph-${{ github.event.inputs.version }}/ConceptGraph.exe"
          zip -r ConceptGraph-${{ github.event.inputs.version }}-windows.zip win/ConceptGraph-${{ github.event.inputs.version }}

      - name: Export OSX build
        run: |
          mkdir -p osx/ConceptGraph-${{ github.event.inputs.version }}
          builds/server/godot_server.x11.opt.tools.64 --path concept_graph --export "osx" "../osx/ConceptGraph-${{ github.event.inputs.version }}/ConceptGraph"
          zip -r ConceptGraph-${{ github.event.inputs.version }}-osx.zip osx/ConceptGraph-${{ github.event.inputs.version }}

      - name: Create a Release
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            tag_name: ${{ github.ref }}
            release_name: ConceptGraph Release ${{ github.event.inputs.version }}
            body: ''
            draft: true
            prerelease: true

      - name: Upload Linux build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ConceptGraph-${{ github.event.inputs.version }}-linux.zip
          asset_name: ConceptGraph-${{ github.event.inputs.version }}-linux.zip
          asset_content_type: application/zip

      - name: Upload Windows build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ConceptGraph-${{ github.event.inputs.version }}-windows.zip
          asset_name: ConceptGraph-${{ github.event.inputs.version }}-windows.zip
          asset_content_type: application/zip

      - name: Upload OSX build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ConceptGraph-${{ github.event.inputs.version }}-osx.zip
          asset_name: ConceptGraph-${{ github.event.inputs.version }}-osx.zip
          asset_content_type: application/zip

